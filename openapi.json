{
    "openapi": "3.1.0",
    "info": {
      "title": "GPT Stripe Payment API",
      "version": "1.0.0",
      "description": "API for managing users, products, orders, and payments via Stripe."
    },
    "servers": [
      {
        "url": "https://gpt-stripe-store-main-for-nexus1e.vercel.app/",
        "description": "Production environment"
      },
      {
        "url": "https://gpt-stripe-store-dev.for-nexus1e.vercel.app/",
        "description": "Development environment"
      }
    ],
    "paths": {
      "/": {
        "get": {
          "summary": "Health Check",
          "operationId": "healthCheck",
          "responses": {
            "200": {
              "description": "API is running successfully.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "ok"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/register": {
        "post": {
          "summary": "Register a New User",
          "operationId": "registerUser",
          "requestBody": {
            "description": "User registration details",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistration"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User registered successfully.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input data.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/login": {
        "post": {
          "summary": "User Login",
          "operationId": "loginUser",
          "requestBody": {
            "description": "User login credentials",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLogin"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login successful.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AuthToken"
                  }
                }
              }
            },
            "401": {
              "description": "Authentication failed.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/products": {
        "get": {
          "summary": "List All Products",
          "operationId": "listProducts",
          "responses": {
            "200": {
              "description": "A list of products.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a New Product",
          "operationId": "createProduct",
          "requestBody": {
            "description": "Product details",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCreate"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Product created successfully.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid product data.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/products/{productId}": {
        "get": {
          "summary": "Get Product by ID",
          "operationId": "getProductById",
          "parameters": [
            {
              "name": "productId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Unique ID of the product"
            }
          ],
          "responses": {
            "200": {
              "description": "Product details retrieved.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            },
            "404": {
              "description": "Product not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "put": {
          "summary": "Update Product by ID",
          "operationId": "updateProductById",
          "parameters": [
            {
              "name": "productId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Unique ID of the product"
            }
          ],
          "requestBody": {
            "description": "Updated product details",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Product updated successfully.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid product data.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Product not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "summary": "Delete Product by ID",
          "operationId": "deleteProductById",
          "parameters": [
            {
              "name": "productId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Unique ID of the product"
            }
          ],
          "responses": {
            "204": {
              "description": "Product deleted successfully."
            },
            "404": {
              "description": "Product not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/orders": {
        "post": {
          "summary": "Create a New Order",
          "operationId": "createOrder",
          "requestBody": {
            "description": "Order details",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderCreate"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Order created successfully.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid order data.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        },
        "get": {
          "summary": "List User's Orders",
          "operationId": "listUserOrders",
          "parameters": [
            {
              "name": "status",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["pending", "paid", "failed"]
              },
              "description": "Filter orders by status"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              },
              "description": "Page number for pagination"
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 10
              },
              "description": "Number of orders per page"
            }
          ],
          "responses": {
            "200": {
              "description": "List of user orders.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        }
      },
      "/orders/{orderId}": {
        "get": {
          "summary": "Get Order by ID",
          "operationId": "getOrderById",
          "parameters": [
            {
              "name": "orderId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Unique ID of the order"
            }
          ],
          "responses": {
            "200": {
              "description": "Order details retrieved.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            },
            "404": {
              "description": "Order not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        }
      },
      "/payment-url/{orderId}": {
        "get": {
          "summary": "Get Payment URL for an Order",
          "operationId": "getPaymentURL",
          "parameters": [
            {
              "name": "orderId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Unique ID of the order"
            }
          ],
          "responses": {
            "200": {
              "description": "Payment URL retrieved successfully.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaymentURLResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Order not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Order cannot be paid.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        }
      },
      "/webhook/stripe": {
        "post": {
          "summary": "Handle Stripe Webhook Events",
          "operationId": "handleStripeWebhook",
          "requestBody": {
            "description": "Stripe webhook event payload",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the webhook event"
                    },
                    "object": {
                      "type": "string",
                      "description": "Type of the webhook object"
                    },
                    "type": {
                      "type": "string",
                      "description": "Event type, e.g., 'payment_intent.succeeded'"
                    },
                    "data": {
                      "type": "object",
                      "description": "Event data payload"
                    },
                    "created": {
                      "type": "integer",
                      "description": "Timestamp when the event was created"
                    },
                    "livemode": {
                      "type": "boolean",
                      "description": "Indicates if the event was sent from live mode"
                    }
                  },
                  "required": ["id", "object", "type", "data", "created", "livemode"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Webhook event processed successfully.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WebhookResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid webhook payload.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/hasUserPaid/{orderId}": {
        "get": {
          "summary": "Check If User Has Paid for an Order",
          "operationId": "hasUserPaid",
          "parameters": [
            {
              "name": "orderId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "description": "Unique ID of the order"
            }
          ],
          "responses": {
            "200": {
              "description": "User payment status retrieved.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaymentStatusResponse"
                  }
                }
              }
            },
            "404": {
              "description": "Order not found.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        }
      },
      "/privacy": {
        "get": {
          "summary": "Retrieve Privacy Policy",
          "operationId": "getPrivacyPolicy",
          "responses": {
            "200": {
              "description": "Privacy policy text retrieved.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PrivacyPolicy"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "UserRegistration": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "John Doe"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "john.doe@example.com"
            },
            "password": {
              "type": "string",
              "format": "password",
              "example": "SecureP@ssw0rd"
            }
          },
          "required": ["name", "email", "password"]
        },
        "UserLogin": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "example": "john.doe@example.com"
            },
            "password": {
              "type": "string",
              "format": "password",
              "example": "SecureP@ssw0rd"
            }
          },
          "required": ["email", "password"]
        },
        "AuthToken": {
          "type": "object",
          "properties": {
            "access_token": {
              "type": "string",
              "description": "JWT access token",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
            },
            "token_type": {
              "type": "string",
              "example": "bearer"
            }
          }
        },
        "UserResponse": {
          "type": "object",
          "properties": {
            "user_id": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "name": {
              "type": "string",
              "example": "John Doe"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "john.doe@example.com"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2025-01-10T12:34:56Z"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2025-01-10T12:34:56Z"
            }
          }
        },
        "Product": {
          "type": "object",
          "properties": {
            "product_id": {
              "type": "string",
              "format": "uuid",
              "example": "prod_ABC123XYZ"
            },
            "name": {
              "type": "string",
              "example": "Premium Subscription"
            },
            "description": {
              "type": "string",
              "example": "Access to all premium features."
            },
            "price": {
              "type": "number",
              "format": "float",
              "example": 49.99
            },
            "currency": {
              "type": "string",
              "example": "usd"
            },
            "stripe_product_id": {
              "type": "string",
              "example": "stripe_prod_ABC123XYZ"
            },
            "stripe_price_id": {
              "type": "string",
              "example": "stripe_price_ABC123XYZ"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2025-01-10T12:34:56Z"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2025-01-10T12:34:56Z"
            }
          }
        },
        "ProductCreate": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Premium Subscription"
            },
            "description": {
              "type": "string",
              "example": "Access to all premium features."
            },
            "price": {
              "type": "number",
              "format": "float",
              "example": 49.99
            },
            "currency": {
              "type": "string",
              "example": "usd"
            }
          },
          "required": ["name", "price", "currency"]
        },
        "ProductUpdate": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Updated Subscription"
            },
            "description": {
              "type": "string",
              "example": "Updated description."
            },
            "price": {
              "type": "number",
              "format": "float",
              "example": 59.99
            },
            "currency": {
              "type": "string",
              "example": "usd"
            }
          }
        },
        "OrderCreate": {
          "type": "object",
          "properties": {
            "products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OrderItemCreate"
              },
              "description": "List of products to include in the order."
            }
          },
          "required": ["products"]
        },
        "OrderItemCreate": {
          "type": "object",
          "properties": {
            "product_id": {
              "type": "string",
              "format": "uuid",
              "example": "prod_ABC123XYZ"
            },
            "quantity": {
              "type": "integer",
              "example": 2
            }
          },
          "required": ["product_id", "quantity"]
        },
        "Order": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string",
              "format": "uuid",
              "example": "order_ABC123XYZ"
            },
            "user_id": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "total_amount": {
              "type": "number",
              "format": "float",
              "example": 99.98
            },
            "currency": {
              "type": "string",
              "example": "usd"
            },
            "status": {
              "type": "string",
              "enum": ["pending", "paid", "failed"],
              "example": "pending"
            },
            "stripe_payment_intent_id": {
              "type": "string",
              "example": "pi_ABC123XYZ"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2025-01-10T12:34:56Z"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2025-01-10T12:34:56Z"
            },
            "order_items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OrderItem"
              }
            }
          }
        },
        "OrderItem": {
          "type": "object",
          "properties": {
            "order_item_id": {
              "type": "string",
              "format": "uuid",
              "example": "order_item_ABC123XYZ"
            },
            "order_id": {
              "type": "string",
              "format": "uuid",
              "example": "order_ABC123XYZ"
            },
            "product_id": {
              "type": "string",
              "format": "uuid",
              "example": "prod_ABC123XYZ"
            },
            "quantity": {
              "type": "integer",
              "example": 2
            },
            "unit_price": {
              "type": "number",
              "format": "float",
              "example": 49.99
            },
            "total_price": {
              "type": "number",
              "format": "float",
              "example": 99.98
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2025-01-10T12:34:56Z"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2025-01-10T12:34:56Z"
            }
          }
        },
        "PaymentURLResponse": {
          "type": "object",
          "properties": {
            "payment_url": {
              "type": "string",
              "format": "uri",
              "example": "https://checkout.stripe.com/pay/cs_test_1234567890"
            }
          }
        },
        "WebhookResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "example": "success"
            },
            "message": {
              "type": "string",
              "example": "Webhook event processed successfully."
            }
          }
        },
        "PaymentStatusResponse": {
          "type": "object",
          "properties": {
            "hasPaid": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "PrivacyPolicy": {
          "type": "object",
          "properties": {
            "policy": {
              "type": "string",
              "example": "Your privacy policy text goes here."
            }
          }
        },
        "ErrorResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "example": "error"
            },
            "message": {
              "type": "string",
              "example": "Detailed error message."
            }
          }
        }
      },
      "securitySchemes": {
        "BearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT",
          "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
        }
      }
    },
    "tags": [
      {
        "name": "User",
        "description": "Endpoints related to user management."
      },
      {
        "name": "Product",
        "description": "Endpoints related to product management."
      },
      {
        "name": "Order",
        "description": "Endpoints related to order management."
      },
      {
        "name": "Payment",
        "description": "Endpoints related to payment processing."
      },
      {
        "name": "Webhook",
        "description": "Endpoints related to webhook handling."
      },
      {
        "name": "Misc",
        "description": "Miscellaneous endpoints."
      }
    ]
  }
  