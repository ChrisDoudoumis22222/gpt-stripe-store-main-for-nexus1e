{
    "openapi": "3.1.0",
    "info": {
      "title": "FastAPI",
      "version": "0.1.0"
    },
    "servers": [
      {
        "url": "https://gpt-stripe-store-main-for-nexus1e.vercel.app/",
        "description": "Production environment"
      }
    ],
    "paths": {
      "/getColorByMood": {
        "get": {
          "summary": "Get Color By Mood",
          "operationId": "get_color_by_mood_getColorByMood_get",
          "parameters": [
            {
              "name": "mood",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Mood"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/": {
        "get": {
          "summary": "Health Check",
          "operationId": "health_check__get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            }
          }
        }
      },
      "/getPaymentURL": {
        "get": {
          "summary": "Get Payment URL",
          "operationId": "get_payment_url_getPaymentURL_get",
          "responses": {
            "200": {
              "description": "Payment URL Retrieved",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "payment_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "URL for initiating payment"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/webhook/stripe": {
        "post": {
          "summary": "Stripe Webhook",
          "description": "Handles Stripe webhook events such as `checkout.session.async_payment_succeeded`.",
          "operationId": "webhook_received_webhook_stripe_post",
          "requestBody": {
            "description": "Stripe Webhook Event Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the webhook event"
                    },
                    "object": {
                      "type": "string",
                      "description": "The object type, typically `webhook_endpoint`"
                    },
                    "api_version": {
                      "type": "string",
                      "nullable": true,
                      "description": "API version used to trigger the webhook"
                    },
                    "application": {
                      "type": "string",
                      "nullable": true,
                      "description": "Application ID associated with the webhook, if any"
                    },
                    "created": {
                      "type": "integer",
                      "description": "Timestamp when the webhook was created"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true,
                      "description": "Description of the webhook endpoint"
                    },
                    "enabled_events": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of events this webhook listens to"
                    },
                    "livemode": {
                      "type": "boolean",
                      "description": "Indicates whether the webhook is in live mode"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Additional metadata attached to the webhook"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the webhook, e.g., `enabled`"
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URL of the webhook endpoint"
                    }
                  },
                  "required": ["id", "object", "enabled_events", "status", "url"]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Webhook Event Processed Successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Webhook event processed successfully"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Invalid webhook payload"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/hasUserPaid": {
        "get": {
          "summary": "Check User Payment Status",
          "operationId": "has_user_paid_hasUserPaid_get",
          "responses": {
            "200": {
              "description": "User Payment Status Retrieved",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "hasPaid": {
                        "type": "boolean",
                        "description": "Indicates if the user has paid"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/privacy": {
        "get": {
          "summary": "Privacy Policy",
          "operationId": "privacy_privacy_get",
          "responses": {
            "200": {
              "description": "Privacy Policy Retrieved",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "description": "The privacy policy text"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "HTTPValidationError": {
          "properties": {
            "detail": {
              "items": {
                "$ref": "#/components/schemas/ValidationError"
              },
              "type": "array",
              "title": "Detail"
            }
          },
          "type": "object",
          "title": "HTTPValidationError"
        },
        "ValidationError": {
          "properties": {
            "loc": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              "type": "array",
              "title": "Location"
            },
            "msg": {
              "type": "string",
              "title": "Message"
            },
            "type": {
              "type": "string",
              "title": "Error Type"
            }
          },
          "type": "object",
          "required": ["loc", "msg", "type"],
          "title": "ValidationError"
        }
      }
    }
  }
  